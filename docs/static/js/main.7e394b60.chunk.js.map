{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGits.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","console","log","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"6MAuCeA,EApCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACDC,mBAAS,IADR,mBAC9BC,EAD8B,KAClBC,EADkB,KAkBrC,OACI,0BAAMC,SAXU,SAACC,GACbC,QAAQC,IAAI,gBACZF,EAAEG,iBACAN,EAAWO,OAAOC,OAAO,IAC3BV,GAAc,SAAAW,GAAI,OAAGT,GAAH,mBAAiBS,OACnCR,EAAc,OAQhB,2BACAS,KAAK,OACLC,MAAOX,EACPY,SArBkB,SAACT,GAErBF,EAAcE,EAAEU,OAAOF,YCIhBG,EAVK,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAE3B,OACI,yBAAKC,UAAU,0CACX,yBAAMC,IAAMF,EAAMG,IAAKJ,IACvB,2BAAIA,K,uBCPHK,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACZN,EADY,0FAC8EO,UAAUF,GADxF,sBAECG,MAAMR,GAFP,cAEZS,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GACjB,MAAM,CACJhB,GAAGgB,EAAIhB,GACPC,MAAMe,EAAIf,MACVC,IAAIc,EAAIC,OAAOC,iBAAiBhB,QATpB,kBAaXY,GAbW,4CAAF,sDC0DLK,EApDC,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECFJ,SAACA,GAAY,IAAD,EACVvB,mBAAS,CAC/B6B,KAAK,GACLO,SAAQ,IAHwB,mBAC7BC,EAD6B,KACtBC,EADsB,KAsBpC,OAfAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLT,KAAKY,EACLL,SAAQ,MAEb,UAGb,CAACb,IAIIc,EDjBmBM,CAAapB,GAA/BU,EAHoB,EAGzBJ,KAAaO,EAHY,EAGZA,QA8BhB,OACE,oCAEE,wBAAIjB,UAAU,qCAAqCI,GACjDa,EAAU,eAAiB,eAE7B,yBAAKjB,UAAU,aAITc,EAAOF,KAAI,SAAAC,GAAG,OAAG,kBAAC,EAAD,eAAaY,IAAKZ,EAAIhB,IAAQgB,UEhB9Ca,EA7BM,WAAM,MAEY7C,mBAAS,CAAC,cAFtB,mBAEjB8C,EAFiB,KAEL/C,EAFK,KAUvB,OACI,oCACI,4CACI,kBAAC,EAAD,CAAaA,cAAkBA,IACnC,6BAEA,4BAEQ+C,EAAWf,KAAI,SAACR,EAASwB,GAAV,OAEZ,kBAAC,EAAD,CAASH,IAAKrB,EAAUA,SAAUA,UCnBzDyB,IAASC,OACR,kBAAE,EAAF,MACCC,SAASC,eAAe,U","file":"static/js/main.7e394b60.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setcategories}) => {\r\n    const [inputValue, setinputValue] = useState('')\r\n    \r\n    const handleInputChange=(e)=>{\r\n        //console.log(e.target.value)\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit =(e)=>{\r\n            console.log(\"Submit hecho\")\r\n            e.preventDefault();\r\n           if(inputValue.trim().length>2){\r\n            setcategories(cats=>[inputValue,...cats]);\r\n            setinputValue('');\r\n           }\r\n           \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n       \r\n          <input \r\n          type=\"text\" \r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          /> \r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired,\r\n  };\r\n\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({id,title,url}) => {\r\n  //  console.log(id,title,url)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img  src={ url } alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","export const getGifs= async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=PzM98m7TtFZCi5m8IcoUg00RrOqYcHxU&q=${ encodeURI(category)}&limit=10`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json(); \r\n    \r\n    const gifs= data.map(img=>{\r\n        return{\r\n          id:img.id,\r\n          title:img.title,\r\n          url:img.images.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n  }","//import React,{useState,useEffect} from 'react'\r\nimport React from 'react'\r\nimport GifGridItem from './GifGridItem';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGits';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n//  const [count, setcount] = useState(0);\r\nconst {data:images ,loading} =useFetchGifs(category);\r\n\r\n\r\n\r\n//const [images, setimages] = useState([])\r\n\r\n // useEffect(()=>{\r\n   // getGifs();\r\n //  getGifs(category)\r\n  //  .then(img=>setimages(img))\r\n // },[category])\r\n\r\n /* const getGifs= async()=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=PzM98m7TtFZCi5m8IcoUg00RrOqYcHxU&q=${ encodeURI(category)}&limit=10`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json(); \r\n    \r\n    const gifs= data.map(img=>{\r\n        return{\r\n          id:img.id,\r\n          title:img.title,\r\n          url:img.images.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    setimages(gifs);\r\n  }\r\n*/\r\n\r\n  \r\n    return (\r\n      <>\r\n        \r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3> \r\n        { loading ? 'Cargando ...' : 'Data Cargada' }\r\n\r\n        <div className=\"card-grid\">   \r\n            {\r\n              /* images.map(img=>(<li key={img.id}>{img.title}</li>))*/\r\n              /*images.map(({id,title})=>(<li key={id}>{title}</li>))*/\r\n              images.map(img=>(<GifGridItem key={img.id} {...img}/>))\r\n            }\r\n          \r\n        </div>\r\n      </>\r\n       \r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import {useState,useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category)=>{\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true,\r\n    })\r\n\r\n    \r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n                setTimeout(() => {\r\n                    setstate({\r\n                        data:imgs,\r\n                        loading:false,\r\n                    })\r\n                }, 3000);\r\n                \r\n            })\r\n    },[category])\r\n\r\n\r\n\r\n    return state;\r\n}","import React,{useState} from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n   // const categories = ['One Punch','Samurai x', 'Dragon Ball'];\r\n   const [categories, setcategories] = useState(['One Punch'])\r\n\r\n    /*const Addhandle=()=>{\r\n        //setcategories([...categories,'Naruto']);\r\n        \r\n        setcategories(cats=>[...cats,'Naruto Shippuden'])\r\n    }*/\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n                <AddCategory setcategories = { setcategories }/>\r\n            <hr />\r\n                    {/*  <button onClick={Addhandle}> Agregar</button> */}   \r\n            <ol>\r\n                {\r\n                    categories.map((category,i)=>(\r\n                       \r\n                       <GifGrid key={category} category={category}/>\r\n                      \r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n < GifExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}